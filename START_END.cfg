########################################
# START END MACRO
#######################################    
    
[gcode_macro START_PRINT]
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:
    {% set max_x = printer.toolhead.axis_maximum.x %}
    {% set max_y = printer.toolhead.axis_maximum.y %}
    {% set min_y = printer.toolhead.axis_minimum.y %}
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}
    {% set bed_type = params.BED_TYPE|default('') %}
    {% set filament_type = params.FILAMENT_TYPE %}
    {% set z_offset = 0 %}
    
    SET_LED LED=light_led white=1
    SET_FILAMENT_SENSOR SENSOR=switch ENABLE=1
    M104 S0
    M140 S0
    SKEW_PROFILE LOAD=skewdav
    M220 S100
    CLEAR_PAUSE
    SET_LED LED=barcled RED=0 GREEN=0 BLUE=0.3
    SET_GCODE_OFFSET Z_ADJUST=0
    {% if bed_type == 'Textured PEI Plate' %}
    {% set z_offset = -0.1 %}
    {% else %}
        {% set z_offset = 0 %}
    {% endif %}
    M118 'adjusting z height for {bed_type} : {z_offset}mm'
    SET_GCODE_OFFSET Z={z_offset}
    M117 Preheating...
    M140 S{BED_TEMP}     # Start bed heating
    M104 S{EXTRUDER_TEMP / 2} # Start extruder half heating
    M190 S{BED_TEMP}  #wait for bed temp
    BEEP I=1 DUR=80 FREQ=600
    
    HOME_START
    {% if filament_type == 'ABS'or filament_type == 'ASA' %}                  #ABS z_offset
    { action_respond_info("ABS or ASA Filament") }
        SET_GCODE_OFFSET Z_ADJUST=0.0 MOVE=1
        BEEP I=2 DUR=100 FREQ=900
    {% endif %}
    {% if filament_type == 'PET' or filament_type == 'PETG' %}                  #PETG z_offset
        { action_respond_info("PETG Filament") }
        SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1
        BEEP I=1 DUR=100 FREQ=900
    {% endif %}
    CHECK_FILAMENT
    M117 Mesh Probing...
    BED_MESH_CLEAR
    BED_MESH_PROFILE REMOVE=default
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    BED_MESH_PROFILE LOAD=default
    BED_MESH_OUTPUT
    G90
    PARK_FRONT
    BEEP I=2 DUR=100 FREQ=1500
    M117 Heating extr...
    M109 S{EXTRUDER_TEMP}
    SET_LED LED=barcled RED=0 GREEN=0.3 BLUE=0
    M117 Starting...
    START_SOUND
    G1 Z10
    G92 E0
    M83 ; SET RELATIVE EXTRUDER
    SET_IDLE_TIMEOUT TIMEOUT=600
    _ADAPTIVE_PURGE
    M117
     
    
[gcode_macro END_PRINT]
gcode:
    {% set zend = params.Z|default(10)|int %} 
    {% set test_z = printer.toolhead.position.z %} ;use to replace gcode._move to test macro'
    {% set max_z = printer.toolhead.axis_maximum.z %}
    {% set z_present = [printer.toolhead.position.z + 100, max_z]|min %}
    
    _MOVE_AWAY
    {% if (printer.gcode_move.position.z + zend) < printer.toolhead.axis_maximum.z %}  ; check that zhop doesn't exceed z max
    ;{% if (test_z + zend) < printer.toolhead.axis_maximum.z %}  ;for test macro. uncomment when not use        
            G91                                                                              ; relative positioning
            G1 Z{zend} F300 ; raise Z up by z hop amount
        {% else %}
         { action_respond_info("End Print zhop exceeds maximum Z height.") }
    {% endif %}
    M400  ;Clear buffer
    G90  ;Set to absolute positioning
    SET_LED LED=barcled RED=0 GREEN=0.5 BLUE=0
    BED_MESH_CLEAR
    SET_SKEW CLEAR=1
    M83 ; SET RELATIVE EXTRUDER
    G92 E0 ; reset Extrusion
    G1 E-2 F2500; retract 2mm at speed
    PARK
    G0 Z{z_present}
    M104 S0 ; turn off extruder
    M106 S0 ; turn off fan
    SET_GCODE_OFFSET Z_ADJUST=0
    {% if printer.heater_bed.temperature > 60 %}
        M118 Start gradual bed cooling ({printer.heater_bed.temperature}C).
        M118 reduce temp to ({printer.heater_bed.temperature - 5 }C).
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=300
        {% else %}
        M118 No Gradual bed cooling necessary ({printer.heater_bed.temperature}C).
    	M140 S0 ; turn off bed
    	M84 ; disable motors
        M82 ; set absolute extruder
        M117 Finito!
        BEEP I=3 DUR=100 FREQ=300
        M117
        SET_FILAMENT_SENSOR SENSOR=switch ENABLE=0
        M118 Print Complete!
        {% endif %}
    
[gcode_macro _MOVE_AWAY]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
      
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} F10800 ; move nozzle to remove stringing 